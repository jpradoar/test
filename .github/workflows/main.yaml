name: main-test
on:
  push:
    branches:
      - main

env:
  REPO_APP: 'noname-file5'
  SLACK_CHANNEL: 'builds-and-ci'
  SLACK_MSG_COLOR: '#0092ff'
  BUILD_CONTEXT: './none'
  COMMITER_NAME: 'AutoCommit'
  VULN_SEVERITY: 'CRITICAL,HIGH'
  VULN_TYPE: 'os,library'
  VULN_FORMAT: 'table' 
  VULN_TIMEOUT_SCAN: '2m0s'
  VULN_EXIT_CODE: 0 # 0=pipeline continue  1=pipeline finish. 
  VULN_SCAN_SEND_SECURITY_TAB: false # false: only commit vuln-scan |   # true: no commit vuln-scan but send output to Github Security tab
  
jobs:
  Demo-job-test:
    runs-on: ubuntu-latest 
    permissions:
      contents: write # get the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status  
      
    
    steps:
    - uses: actions/checkout@v3


    - name: vulnerability found
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'jpradoar/mqtt-dbwriter:1.1.1'
        #image-ref: 'alpine:latest'
        format: ${{ env.VULN_SCAN_SEND_SECURITY_TAB == 'false' && 'table' || 'sarif' }}
        vuln-type: ${{ env.VULN_TYPE }}
        severity: ${{ env.VULN_SEVERITY }}
        timeout: ${{ env.VULN_TIMEOUT_SCAN }}
        output: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'
        exit-code: ${{ env.VULN_EXIT_CODE }}
        hide-progress: true

    - name: validate if exist vuln
      id: vuln_status
      run: |
        cat ./vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif | grep 'Total: 0' && echo 0 || echo 1
      
    - name: No hay vulnerabilidad
      if: steps.vuln_status.outputs.vuln_status == '0'
      run: |
        echo "Espero un 0.  No hay vulnerabilidades"
    
    - name: hay vulnerabilidad
      if: steps.vuln_status.outputs.vuln_status == '1'
      run: |
        echo "Espero un 1.  hay al menos 1 vulnerabilidad"        
