name: main-test
on:
  push:
    branches:
      - disabled
      - main

env:
  REPO_APP: 'mqtt-producer'
  ASSOCIATED_PROJECT: 'projects/1'
  SLACK_CHANNEL: 'builds-and-ci'
  SLACK_MSG_COLOR: '#0092ff'
  BUILD_CONTEXT: './none'
  COMMITER_NAME: 'AutoCommit'
  VULN_SEVERITY: 'CRITICAL'
  VULN_TYPE: 'os,library'
  VULN_FORMAT: 'table' 
  VULN_TIMEOUT_SCAN: '2m0s'
  VULN_SCANNERS: 'vuln,secret,misconfig,license'
  VULN_EXIT_CODE: 0 # 0=pipeline continue  1=pipeline finish. 
  VULN_SCAN_SEND_SECURITY_TAB: false # false: only commit vuln-scan |   # true: no commit vuln-scan but send output to Github Security tab
  TRIVY_DISABLE_VEX_NOTICE: true


jobs:
  Demo-job-test:
    runs-on: ubuntu-latest 
    permissions:
      contents: write # get the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status  
      issues: write # to create new issues in workflows
      
    
    steps:
    - uses: actions/checkout@v3

    - name: search for vulnerabilities
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'jpradoar/mqtt-producer:1.1.3'
        #image-ref: 'alpine:latest'
        format: ${{ env.VULN_SCAN_SEND_SECURITY_TAB == 'false' && 'table' || 'sarif' }}
        vuln-type: ${{ env.VULN_TYPE }}
        severity: ${{ env.VULN_SEVERITY }}
        timeout: ${{ env.VULN_TIMEOUT_SCAN }}
        output: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'
        hide-progress: true
        exit-code: ${{ env.VULN_EXIT_CODE }}
        scanners: ${{ env.VULN_SCANNERS }}
        cache: 'false'
      env:
        TRIVY_DISABLE_VEX_NOTICE: ${{ env.TRIVY_DISABLE_VEX_NOTICE }}
        TRIVY_INSECURE: true
        #TRIVY_SKIP_DB_UPDATE: true


    - name: validate if exist vuln
      id: vuln_status
      run: |
          if grep -q 'Total: 0' ./vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif; then
            echo "::set-output name=vuln_status::0"
          else
            echo "::set-output name=vuln_status::1"
            echo "### See detailed vuln scan in: "  > /tmp/vuln_info.md
            echo "<br>  ![](https://custom-icon-badges.demolab.com/badge/Vulnerability-detected-red.svg)  <br>" >> /tmp/vuln_info.md
            echo " * Vulnerability report: [vuln_scans/${{ env.REPO_APP }}_vuln_scan](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif)"  >> /tmp/vuln_info.md
            echo " * Vulnerability detected in commit: ${{ github.sha }}"  >> /tmp/vuln_info.md
          fi


    - name: cat /tmp/vuln_info.md
      if: steps.vuln_status.outputs.vuln_status == '1'
      run: cat /tmp/vuln_info.md

    - name: cat vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif
      if: steps.vuln_status.outputs.vuln_status == '1'
      run:  cat ./vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif


    - name: No vulnerability found
      if: steps.vuln_status.outputs.vuln_status == '0'
      run: |
        echo "Espero un 0.  No hay vulnerabilidades"


    - uses: EndBug/add-and-commit@v9
      if: steps.vuln_status.outputs.vuln_status == '1'
      with:
        message: 'AutoCommit: Add vuln file'
        add: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'
        committer_name: 'AutoCommit'


    - name: Vulnerability detected - Create issue
      if: steps.vuln_status.outputs.vuln_status == '1'
      run: |
        body="New vulnerability detected on vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif" 
        gh issue create \
        --repo ${{ github.repository }} \
        --title ":skull: [vuln] vulnerability detected on image ${{ env.REPO_APP }} " \
        --body-file '/tmp/vuln_info.md' \
        --assignee "jpradoar" \
        --label bug --label vulnerability
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         --project ${{ env.ASSOCIATED_PROJECT }}
