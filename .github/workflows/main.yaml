name: main-test
on:
  push:
    branches:
      - main

env:
  REPO_APP: 'noname-file3'
  SLACK_CHANNEL: 'builds-and-ci'
  SLACK_MSG_COLOR: '#0092ff'
  BUILD_CONTEXT: './none'
  COMMITER_NAME: 'AutoCommit'
  VULN_SEVERITY: 'CRITICAL,HIGH'
  VULN_TYPE: 'os,library'
  VULN_FORMAT: 'table' 
  VULN_TIMEOUT_SCAN: '2m0s'
  VULN_EXIT_CODE: '0' # 0=pipeline continue  1=pipeline finish. 
  VULN_SCAN_SEND_SECURITY_TAB: true # false: only commit vuln-scan |   # true: no commit vuln-scan but send output to Github Security tab
  
jobs:
  Demo-job-test:
    runs-on: ubuntu-latest 
    permissions:
      contents: write # get the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status  
      
    
    steps:
     
    - uses: actions/checkout@v3

      # image-ref: 'jpradoar/mqtt-producer:1.1.2'
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'jpradoar/mqtt-producer:1.1.2'
        #format: ${{ env.VULN_FORMAT }}
        format: ${{ env.VULN_SCAN_SEND_SECURITY_TAB == 'false' && 'table' || '' }}
        vuln-type: ${{ env.VULN_TYPE }}
        severity: ${{ env.VULN_SEVERITY }}
        timeout: ${{ env.VULN_TIMEOUT_SCAN }}
        output: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'
        exit-code: ${{ env.VULN_EXIT_CODE }}
       
    - name: Upload Trivy scan file
      uses: EndBug/add-and-commit@v9
      with:
        message: 'AutoCommit: Add table file'
        add: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'

    # If you prefere, can enable it and send scan to  GitHub Security tab
    # Remember that require use VULN_FORMAT: 'sarif'
    - name: Upload Trivy scan results to GitHub Security tab
      if: env.VULN_SCAN_SEND_SECURITY_TAB == 'true'
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: './vuln_scans/${{ env.REPO_APP }}_vuln_scan.sarif'
